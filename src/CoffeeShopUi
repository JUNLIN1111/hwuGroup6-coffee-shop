import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import java.util.List;
import java.util.stream.Collectors;

public class CoffeeShopUI {
    private VBox root;
    private Scene scene;
    private ListView<String> menuListView;
    private ListView<String> orderListView;
    private Label totalPriceLabel;
    private ObservableList<String> orderItems;
    private Menu menu;
    private OrderProcessor orderProcessor;

    public CoffeeShopUI(Menu menu, OrderProcessor orderProcessor) {
        this.menu = menu;
        this.orderProcessor = orderProcessor;

        root = new VBox(10);
        root.setPadding(new Insets(10));

        Label menuLabel = new Label("Menu");
        menuListView = new ListView<>();
        orderListView = new ListView<>();
        orderItems = FXCollections.observableArrayList();
        orderListView.setItems(orderItems);

        loadMenu();

        Button addButton = new Button("Add to Order");
        addButton.setOnAction(e -> addItemToOrder());

        Label orderLabel = new Label("Current Order");
        Button submitOrderButton = new Button("Submit Order");
        submitOrderButton.setOnAction(e -> submitOrder());

        totalPriceLabel = new Label("Total Price: $0.00");

        Button reportButton = new Button("Generate Report");
        reportButton.setOnAction(e -> generateReport());

        HBox buttonBox = new HBox(10, addButton, submitOrderButton, reportButton);
        buttonBox.setPadding(new Insets(5));

        root.getChildren().addAll(menuLabel, menuListView, buttonBox, orderLabel, orderListView, totalPriceLabel);

        // 创建 JavaFX 场景
        scene = new Scene(root, 800, 600);
    }

    public Scene getScene() {
        return scene;
    }

    private void loadMenu() {
        for (Item item : menu.getItemList()) {
            menuListView.getItems().add(item.getDescription() + " - $" + item.getCost());
        }
    }

    private void addItemToOrder() {
        String selectedItem = menuListView.getSelectionModel().getSelectedItem();
        if (selectedItem != null) {
            orderItems.add(selectedItem);
        }
    }

    private void submitOrder() {
        if (orderItems.isEmpty()) {
            showError("No items selected!");
            return;
        }

        double total = calculateTotalPrice();
        totalPriceLabel.setText(String.format("Total Price: $%.2f", total));

        orderProcessor.getList().addOrder(new Order("O" + System.currentTimeMillis(), "Guest", "Now", convertToItems(orderItems)));

        orderItems.clear();
    }

    private double calculateTotalPrice() {
        double total = 0;
        for (String item : orderItems) {
            String[] parts = item.split(" - \\$");
            double price = Double.parseDouble(parts[1]);
            total += price;
        }
        return total;
    }



    private List<Item> convertToItems(List<String> itemNames) {
        return menu.getItemList().stream()
                .filter(item -> itemNames.contains(item.getDescription() + " - $" + item.getCost()))
                .collect(Collectors.toList()); // ✅ 兼容 Java 8+ 的写法
    }


    private void generateReport() {
        orderProcessor.getList().generateLog();
        showInfo("Order report saved to 'order_log.txt'.");
    }

    private void showError(String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("Error");
        alert.setContentText(message);
        alert.showAndWait();
    }

    private void showInfo(String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Information");
        alert.setContentText(message);
        alert.showAndWait();
    }

    public void onExit() {
        System.out.println("Application closing...");
        orderProcessor.getList().generateLog();
    }
}
